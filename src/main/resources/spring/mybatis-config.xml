<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

	<settings>
		<!-- changes from the defaults -->
		<setting name="lazyLoadingEnabled" value="false" />
		<!-- sql日志输出 -->
		<!-- mark by Nick 2017-11-08 本地测试时 在控制台输出sql需要放开配置 -->
		<setting name="logImpl" value="STDOUT_LOGGING"/>
	</settings>
	
	<!-- 
	    plugins在配置文件中的位置必须符合要求，否则会报错，顺序如下:
	    properties?, settings?, 
	    typeAliases?, typeHandlers?, 
	    objectFactory?,objectWrapperFactory?, 
	    plugins?, 
	    environments?, databaseIdProvider?, mappers?
	-->
	
	<!--<plugins>
	    &lt;!&ndash; com.github.pagehelper为PageHelper类所在包名 &ndash;&gt;
	    <plugin interceptor="com.github.pagehelper.PageHelper">
	        <property name="dialect" value="mysql"/>
	        &lt;!&ndash; 该参数默认为false &ndash;&gt;
	        &lt;!&ndash; 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 &ndash;&gt;
	        &lt;!&ndash; 和startPage中的pageNum效果一样&ndash;&gt;
	        <property name="offsetAsPageNum" value="true"/>
	        &lt;!&ndash; 该参数默认为false &ndash;&gt;
	        &lt;!&ndash; 设置为true时，使用RowBounds分页会进行count查询 &ndash;&gt;
	        <property name="rowBoundsWithCount" value="true"/>
	        &lt;!&ndash; 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果 &ndash;&gt;
	        &lt;!&ndash; （相当于没有执行分页查询，但是返回结果仍然是Page类型）&ndash;&gt;
	        <property name="pageSizeZero" value="true"/>
	        &lt;!&ndash; 3.3.0版本可用 - 分页参数合理化，默认false禁用 &ndash;&gt;
	        &lt;!&ndash; 启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页 &ndash;&gt;
	        &lt;!&ndash; 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 &ndash;&gt;
	        <property name="reasonable" value="true"/>
	        &lt;!&ndash; 3.5.0版本可用 - 为了支持startPage(Object params)方法 &ndash;&gt;
	        &lt;!&ndash; 增加了一个`params`参数来配置参数映射，用于从Map或ServletRequest中取值 &ndash;&gt;
	        &lt;!&ndash; 可以配置pageNum,pageSize,count,pageSizeZero,reasonable,不配置映射的用默认值 &ndash;&gt;
	        <property name="params" value="pageNum=start;pageSize=limit;pageSizeZero=zero;reasonable=heli;count=contsql"/>
	    </plugin>
	</plugins>-->
	
	<!--
	    增加dialect属性，使用时必须指定该属性，可选值为oracle,mysql,mariadb,sqlite,hsqldb,postgresql,sqlserver,没有默认值，必须指定该属性。
	    增加offsetAsPageNum属性，默认值为false，使用默认值时不需要增加该配置，需要设为true时，需要配置该参数。当该参数设置为true时，使用RowBounds分页时，会将offset参数当成pageNum使用，可以用页码和页面大小两个参数进行分页。
	    增加rowBoundsWithCount属性，默认值为false，使用默认值时不需要增加该配置，需要设为true时，需要配置该参数。当该参数设置为true时，使用RowBounds分页会进行count查询。
	    增加pageSizeZero属性，默认值为false，使用默认值时不需要增加该配置，需要设为true时，需要配置该参数。当该参数设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是Page类型）。
	    增加reasonable属性，默认值为false，使用默认值时不需要增加该配置，需要设为true时，需要配置该参数。具体作用请看上面配置文件中的注释内容。
	    为了支持startPage(Object params)方法，增加了一个params参数来配置参数映射，用于从Map或ServletRequest中取值，可以配置pageNum,pageSize,count,pageSizeZero,reasonable,不配置映射的用默认值。
	 -->
</configuration>
